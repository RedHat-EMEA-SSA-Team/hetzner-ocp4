---

- name: Find entitlement
  find:
    paths: /etc/pki/entitlement/
    patterns: '*-key.pem'
  register: files

- name: "Check amount of entitlement"
  fail:
    msg: "To many entitlements, please specify one if the entitlement ids via entitlement_id: {{ files.files | map(attribute='path') | map('regex_replace','^/etc/pki/entitlement/([0-9]+)-key.pem$', '\\1') | join(', ')  }}"
  when: entitlement_id is not defined and files.matched > 1

# /etc/pki/entitlement/4988695409571740307-key.pem
# - debug:
#     msg: "{{ files.files[0].path | regex_replace('^/etc/pki/entitlement/([0-9]+)-key.pem$', '\\1') }}"

- name: Set entitlement_id in case of entitlement_id is not defined and amount of entitlement is one
  set_fact:
    entitlement_id: "{{ files.files[0].path | regex_replace('^/etc/pki/entitlement/([0-9]+)-key.pem$', '\\1') }}"
  when: entitlement_id is not defined and files.matched == 1

- shell: "cat /etc/pki/entitlement/{{ entitlement_id }}-key.pem | base64 -w0"
  register: register_entitlement_key_base64

- shell: "cat /etc/pki/entitlement/{{ entitlement_id }}.pem | base64 -w0"
  register: register_entitlement_base64

- name: Apply entitle machineconfig
  k8s:
    state: present
    kubeconfig: "{{ k8s_kubeconfig }}"
    host: "{{ k8s_host }}"
    ca_cert: "{{ k8s_ca_cert }}"
    client_cert: "{{ k8s_client_cert }}"
    client_key: "{{ k8s_client_key }}"
    definition: "{{ lookup('template', 'templates/0003-cluster-wide-machineconfigs.yaml.j2') }}"
  vars:
    entitlement_key_base64: "{{ register_entitlement_key_base64.stdout }}"
    entitlement_base64: "{{ register_entitlement_base64.stdout }}"
    role: "{{ loop_role }}"
  with_items:
    - master
    - worker
  loop_control:
    loop_var: loop_role


