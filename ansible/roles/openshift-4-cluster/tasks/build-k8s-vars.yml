---

- name: Create own kubeconfig directory
  ansible.builtin.file:
    state: directory
    path: "{{ openshift_install_dir }}/config/"
    mode: 0755

- name: Copy kubeconfig
  ansible.builtin.copy:
    src: "{{ openshift_install_dir }}/auth/kubeconfig"
    dest: "{{ openshift_install_dir }}/config/kubeconfig"
    remote_src: yes
    mode: 0644

- name: Slurp kubeconfig
  ansible.builtin.slurp:
    src: "{{ openshift_install_dir }}/config/kubeconfig"
  register: kubeconfig_raw

- name: Copy content into kubeconfig
  ansible.builtin.set_fact:
    kubeconfig: "{{ kubeconfig_raw['content'] | b64decode | from_yaml }}"

# - name: Fetch Kubeconfig
#   set_fact:
#     kubeconfig: "{{ lookup('file',  openshift_install_dir ~ '/config/kubeconfig' ) | from_yaml }}"

- name: Select cluster & user
  ansible.builtin.set_fact:
    cluster: "{{ kubeconfig | json_query('clusters[?name==`'~ cluster_name ~'`].cluster') | first }}"
    user: "{{ kubeconfig | json_query('users[?name==`admin`].user') | first }}"

- name: Set kube variables
  ansible.builtin.set_fact:
    k8s_kubeconfig: "{{ openshift_install_dir }}/config/kubeconfig"
    k8s_host: "{{ cluster.server }}"
    k8s_ca_cert: "{{ openshift_install_dir }}/config/ca.crt"
    k8s_client_key: "{{ openshift_install_dir }}/config/client.key"
    k8s_client_cert: "{{ openshift_install_dir }}/config/client.crt"

- name: Create k8s_ca_cert
  ansible.builtin.copy:
    content: "{{ cluster['certificate-authority-data'] | b64decode }}"
    dest: "{{ k8s_ca_cert }}"
    mode: 0644

- name: Create k8s_client_key
  ansible.builtin.copy:
    content: "{{ user['client-key-data'] | b64decode }}"
    dest: "{{ k8s_client_key }}"
    mode: 0644

- name: Create k8s_client_cert
  ansible.builtin.copy:
    content: "{{ user['client-certificate-data'] | b64decode }}"
    dest: "{{ k8s_client_cert }}"
    mode: 0644
