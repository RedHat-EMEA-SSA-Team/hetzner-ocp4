---
- name: Destroy public dns entries
  import_role:
    name: public_dns
    tasks_from: destroy.yml
  vars:
    pd_provider: "{{ dns_provider }}"
    pd_public_ip: "{{ listen_address }}"
    pd_cloudflare_account_api_token: "{{ cloudflare_account_api_token }}"
    pd_cloudflare_zone: "{{ cloudflare_zone }}"
    pd_aws_access_key: "{{ aws_access_key }}"
    pd_aws_secret_key: "{{ aws_secret_key }}"
    pd_aws_zone: "{{ aws_zone }}"
    pd_hetzner_account_api_token: "{{ hetzner_account_api_token }}"
    pd_hetzner_zone: "{{ hetzner_zone }}"
    pd_public_domain: "{{ cluster_name }}.{{ public_domain }}"
  tags: public_dns
  when: dns_provider != 'none'

- name: Remove api.{{ cluster_name }}.{{ public_domain }} to /etc/hosts
  blockinfile:
    path: /etc/hosts
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ cluster_name }}.{{ public_domain }}"
    block: ""
  tags: public_dns
  when: dns_provider == 'none'

- name: Destroy OpenShift 4 load balancer
  import_role:
    name: openshift-4-loadbalancer
    tasks_from: destroy.yml
  vars:
    lb_name: "openshift-4-loadbalancer-{{ cluster_name }}"
  tags:
    lb

- name: Destroy Network {{ vn_name }}
  virt_net:
    command: destroy
    name: "{{ vn_name }}"
  ignore_errors: yes

- name: Undefine Network {{ vn_name }}
  virt_net:
    command: undefine
    name: "{{ vn_name }}"

- name: Check firewalld source
  shell: "firewall-cmd --zone=internal --list-sources | grep -q '{{ vn_subnet }}/24'"
  ignore_errors: true
  register: grep_rc
