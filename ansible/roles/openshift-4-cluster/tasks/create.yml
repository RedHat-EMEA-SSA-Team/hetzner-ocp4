---
- import_tasks: create-network.yml
  vars:
    vn_public_domain: "{{ cluster_name }}.{{ public_domain }}"
    vn_master_count: "{{ master_count }}"
    vn_compute_count: "{{ compute_count }}"
  tags: network

- name: Disable letsencrypt if dns_provider is none
  set_fact:
    letsencrypt_disabled: true
  when: dns_provider == 'none'

- import_role:
    name: letsencrypt
  vars:
    le_dns_provider: "{{ dns_provider }}"
    le_public_domain: "{{ cluster_name }}.{{ public_domain }}"
    le_certificates_dir: "{{ certificates_dir }}"
    # Only set if you really want a production letsencrypt certificate
    # without le_acme_directory it use the staging env.
    #   https://letsencrypt.org/docs/rate-limits/
    le_acme_directory: "{{ letsencrypt_directory }}"

    le_letsencrypt_account_email: "{{ letsencrypt_account_email | default(cloudflare_account_email)}}"

    le_cloudflare_account_email: "{{ cloudflare_account_email | default(letsencrypt_account_email)}}"
    le_cloudflare_account_api_token: "{{ cloudflare_account_api_token }}"
    le_cloudflare_zone: "{{ cloudflare_zone }}"

    le_aws_access_key: "{{ aws_access_key }}"
    le_aws_secret_key: "{{ aws_secret_key }}"
    le_aws_zone: "{{ aws_zone }}"

    le_gcp_project: "{{ gcp_project }}"
    le_gcp_serviceaccount_file: "{{ gcp_serviceaccount_file }}"
    le_gcp_managed_zone_name: "{{ gcp_managed_zone_name }}"
    le_gcp_managed_zone_domain: "{{ gcp_managed_zone_domain }}"

    le_azure_client_id: "{{ azure_client_id }}"
    le_azure_secret: "{{ azure_secret }}"
    le_azure_subscription_id: "{{ azure_subscription_id }}"
    le_azure_tenant: "{{ azure_tenant }}"
    le_azure_resource_group:  "{{ azure_resource_group }}"
    
  tags: letsencrypt
  when: letsencrypt_disabled == false

- name: Download OpenShift Artifacts
  include: download-openshift-artifacts.yml
  tags: download-openshift-artifacts

- name: Create ignition files
  include: create-ignition.yml
  vars:
    ssh_public_key: "{{ lookup('file', '{{ ssh_public_key_location }}.pub') }}"
  tags: ignition

- name: Create bootstrap node
  include: create-vm.yml
  vars:
    vm_instance_name: "{{ cluster_name }}-bootstrap"
    vm_network: "{{ cluster_name }}"
    vm_ignition_file: "{{ openshift_install_dir }}/bootstrap.ign"
    vm_mac_address: "52:54:00:{{ '%02x' % vn_subnet.split('.')[1]|int }}:{{ '%02x' % vn_subnet.split('.')[2]|int }}:{{ '%02x' % 2 }}"
    vm_vcpu: 4
    vm_memory_size: 16384
    vm_memory_unit: 'MiB'
    vm_root_disk_size: '120G'

- name: Create master nodes
  include: create-vm.yml
  vars:
    vm_instance_name: "{{ cluster_name }}-master-{{ item }}"
    vm_network: "{{ cluster_name }}"
    vm_ignition_file: "{{ openshift_install_dir }}/master.ign"
    vm_mac_address: "52:54:00:{{ '%02x' % vn_subnet.split('.')[1]|int }}:{{ '%02x' % vn_subnet.split('.')[2]|int }}:{{ '%02x' % (10 + item|int) }}"
    vm_vcpu: "{{ master_vcpu }}"
    vm_special_cpu: "{{ master_special_cpu | default('') }}"
    vm_memory_size: "{{ master_memory_size }}"
    vm_memory_unit: "{{ master_memory_unit }}"
    vm_root_disk_size: "{{ master_root_disk_size }}"
  with_sequence: start=0 end="{{ master_count|int - 1 }}" stride=1

- name: Create compute node
  include: create-vm.yml
  vars:
    vm_instance_name: "{{ cluster_name }}-compute-{{ item }}"
    vm_network: "{{ cluster_name }}"
    vm_ignition_file: "{{ openshift_install_dir }}/worker.ign"
    vm_mac_address: "52:54:00:{{ '%02x' % vn_subnet.split('.')[1]|int }}:{{ '%02x' % vn_subnet.split('.')[2]|int }}:{{ '%02x' % (10 + master_count|int + item|int) }}"
    vm_vcpu: "{{ compute_vcpu }}"
    vm_special_cpu: "{{ compute_special_cpu | default('') }}"
    vm_memory_size: "{{ compute_memory_size }}"
    vm_memory_unit: "{{ compute_memory_unit }}"
    vm_root_disk_size: "{{ compute_root_disk_size }}"
  with_sequence: start=0 end="{{ compute_count|int - 1 }}" stride=1

- name: Include post installation tasks
  include: post-install.yml
  tags: post-install
