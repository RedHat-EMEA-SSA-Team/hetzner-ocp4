---
artifacts_dir: "{{ playbook_dir }}/.."
openshift_install_dir: "{{ artifacts_dir }}/{{ cluster_name }}"
ssh_public_key_location: ~/.ssh/id_rsa

vn_subnet: "192.168.50.0"
vn_name: "openshift-4-cluster"
vn_internal_domain: "compute.local"
vn_public_domain: "{{ cluster_name }}.{{ public_domain }}"

#
ip_families:
  - IPv4

listen_address: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | default('') }}"
listen_address_ipv6: "{{ hostvars[inventory_hostname]['ansible_default_ipv6']['address'] | default('') }}"

# Default: qcow2
# For more performance use LVM
vm_storage_backend: qcow2
# Only necessary for LVM, ignored by qcow but should be '/var/lib/libvirt/images/'
vm_storage_backend_location:

master_count: 3
master_vcpu: 4
master_memory_size: 16384
master_memory_unit: 'MiB'
# qemu-img image size specified.
#   You may use k, M, G, T, P or E suffixe
master_root_disk_size: '120G'

compute_count: 3
compute_vcpu: 2
compute_memory_size: 8192
compute_memory_unit: 'MiB'
# qemu-img image size specified.
#   You may use k, M, G, T, P or E suffixe
compute_root_disk_size: '120G'

vm_autostart: false

# Important: OpenShift version must match to RHEL CoreOS version!

# reference to OpenShift version
openshift_version: 4.12.0
openshift_install_command: "/opt/openshift-install-{{ openshift_version }}/openshift-install"
# dev-pre:
# {{ openshift_mirror }}/pub/openshift-v4/clients/ocp-dev-preview

# reference to OpenShift clients version
openshift_client_version: "{{ openshift_version }}"

openshift_mirror: "https://mirror.openshift.com"

openshift_location: "{{ openshift_mirror }}/pub/openshift-v4/clients/ocp/{{openshift_client_version}}"

opm_version: "{{ openshift_client_version }}"
opm_download_url: "{{ openshift_location }}/opm-linux-{{ opm_version }}.tar.gz"
opm_dest: "/opt/openshift-client-{{ openshift_client_version }}/"

# reference to coreos qcow file
coreos_version: 4.12.0
coreos_download_url: "{{ openshift_mirror }}/pub/openshift-v4/dependencies/rhcos/{{ coreos_version.split('.')[:2]|join('.') }}/{{ coreos_version }}/rhcos-{{coreos_version}}-x86_64-qemu.x86_64.qcow2.gz"  # noqa line-length
coreos_csum_url: "{{ openshift_mirror }}/pub/openshift-v4/dependencies/rhcos/{{ coreos_version.split('.')[:2]|join('.') }}/{{ coreos_version }}/sha256sum.txt"  # noqa line-length

# you can check available version numbers from here:
# {{ openshift_mirror }}/pub/openshift-v4/dependencies/rhcos/
coreos_path: /var/lib/libvirt/images
coreos_file: "{{ coreos_download_url | basename | regex_search('.*qcow2') }}"
coreos_image_location: "{{ coreos_path }}/{{ coreos_file }}"

certificates_dir: "{{ artifacts_dir }}/certificate"
certficate_fullchain: "{{ certificates_dir }}/{{ cluster_name }}.{{ public_domain }}/fullchain.crt"
certficate_key: "{{ certificates_dir }}/{{ cluster_name }}.{{ public_domain }}/cert.key"
# Default production directory
# Production directory: https://acme-v02.api.letsencrypt.org/directory
# Staging directory: "https://acme-staging-v02.api.letsencrypt.org/directory"
letsencrypt_directory: "https://acme-v02.api.letsencrypt.org/directory"
# By default letsencrypt is enabled.
letsencrypt_disabled: false
# helm
helm_cli_location: "{{ openshift_mirror }}/pub/openshift-v4/clients/helm/latest/helm-linux-amd64"

butane_cli_location: "{{ openshift_mirror }}/pub/openshift-v4/clients/butane/latest/butane-amd64"


# NFS Storage
#  storage_nfs do not support multi cluster support, it overwrites the
#  /etc/exports
storage_nfs: false
storage_nfs_path_prefix: '/var/lib/libvirt/images'
storage_nfs_target_namespace: openshift-nfs-provisioner

# sdn plugin
sdn_plugin_name: OVNKubernetes

# Master node schedulable
masters_schedulable: true

add_ons_enabled: false

# Internal use only, to use an adjusted ignition config.
ignition_filename_appendix: ""